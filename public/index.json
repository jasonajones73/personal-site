[
  {
    "authors": null,
    "categories": [
      "R"
    ],
    "content": "  Synopsis In this analysis I amd concerned with two primary points. Which event types have the greatest health impact and the greatest economic impact. I begin my work with data processing to create usable objects for results visualization. I finish my analysis with two plots and a final table.\n Package Load Load packages required for analysis.\nrequire(tidyverse) require(lubridate) require(kableExtra)  Data Import Leveraging read_csv from the readr packackge included with tidyverse to import the dataset.\nweather_dat = read_csv(\u0026quot;data/repdata%2Fdata%2FStormData.csv.bz2\u0026quot;)  Data Processing The first thing I want to do is convert BGN_DATE to a usable longitudinal variable. I am doing this so I can provide change-over-time information as I attempt to answer both questions presented. I am storing the result as a new object so I don’t mess with my original data import object.\nnew_dat = weather_dat %\u0026gt;% mutate(BGN_DATE = str_trim(str_extract(BGN_DATE, \u0026quot;^\\\\S+\\\\s+\u0026quot;))) %\u0026gt;% mutate(BGN_DATE = as.POSIXct(BGN_DATE, format = \u0026quot;%m/%d/%Y\u0026quot;)) I also want to select the most recent ten years of data. Even though there are data points from 1950-01-03 to 2011-11-30, there are a lot of gaps in data collection the farther back you go.\nnew_dat = new_dat %\u0026gt;% filter(year(BGN_DATE) \u0026gt;= (year(max(BGN_DATE)) - 10)) Question 1 Processing I want to attempt to provide my version of an answer to question 1 in three steps. This section will deal with data processing and later I will work through visual creation. The first thing I am doing is creating a fatalities object representative of the top 10 fatality causing event types.\nquest_1_fat = new_dat %\u0026gt;% group_by(EVTYPE) %\u0026gt;% summarise(fatalities_count = sum(FATALITIES)) %\u0026gt;% ungroup() %\u0026gt;% top_n(10, fatalities_count) The next step is to create an injuries object representative of the top 10 injury causing event types. You will notice this step is just a simple modification of the first.\nquest_1_inj = new_dat %\u0026gt;% group_by(EVTYPE) %\u0026gt;% summarise(injury_count = sum(INJURIES)) %\u0026gt;% ungroup() %\u0026gt;% top_n(10, injury_count) The third and final step starts by filtering for event types that are common between quest_1_fat and quest_1_inj, then consolidates data points by month, sums up injuries and fatalities by event type, and then finally gathers injuries and fatalities into one variable.\nquest_1_final = new_dat %\u0026gt;% filter(EVTYPE %in% quest_1_fat$EVTYPE \u0026amp; EVTYPE %in% quest_1_inj$EVTYPE) %\u0026gt;% mutate(BGN_DATE = floor_date(BGN_DATE, unit = \u0026quot;1 month\u0026quot;)) %\u0026gt;% group_by(BGN_DATE, EVTYPE) %\u0026gt;% summarise_at(c(\u0026quot;INJURIES\u0026quot;, \u0026quot;FATALITIES\u0026quot;), sum) %\u0026gt;% ungroup() %\u0026gt;% gather(\u0026quot;measure\u0026quot;, \u0026quot;count\u0026quot;, 3:4)  Question 2 Processing To begin question two, I am writing a function to help me convert the character values for thousand, million, and billion to their numeric value as a multiplier for the PROPDMG and CROPDMG variables.\nf = function(dat) { if(dat == \u0026quot;K\u0026quot;) { 1000 } else if (dat == \u0026quot;M\u0026quot;) { 1000000 } else if (dat == \u0026quot;B\u0026quot;) { 1000000000 } else { NA } } Next, I filter out NA values for property and crop damage, create two new variables that replace the character values with integer multipliers, and then calculate actual property and crop damage values.\nnew_dat = new_dat %\u0026gt;% filter(is.na(PROPDMGEXP) == FALSE) %\u0026gt;% filter(is.na(CROPDMGEXP) == FALSE) %\u0026gt;% mutate(prop_mult = as.integer(map_chr(.x = PROPDMGEXP, .f = f))) %\u0026gt;% mutate(crop_mult = as.integer(map_chr(.x = CROPDMGEXP, .f = f))) %\u0026gt;% mutate(prop_dmg = PROPDMG * prop_mult) %\u0026gt;% mutate(crop_dmg = CROPDMG * crop_mult) Very similar to question one, I am now going to look at the top ten event types by total property damage over the last ten years.\nquest_2_prop = new_dat %\u0026gt;% group_by(EVTYPE) %\u0026gt;% summarise(total_dmg = sum(prop_dmg)) %\u0026gt;% ungroup() %\u0026gt;% top_n(10, total_dmg) Here again, I am creating an object that has the top ten event types by total crop damage over the last ten years.\nquest_2_crop = new_dat %\u0026gt;% group_by(EVTYPE) %\u0026gt;% summarise(total_dmg = sum(crop_dmg)) %\u0026gt;% ungroup() %\u0026gt;% top_n(10, total_dmg) As a final step, I am creating an object that filters for only event types that occur in both top ten lists and then calculates total property and crop damage over time.\nquest_2_final = new_dat %\u0026gt;% filter(EVTYPE %in% quest_2_prop$EVTYPE \u0026amp; EVTYPE %in% quest_2_crop$EVTYPE) %\u0026gt;% mutate(BGN_DATE = floor_date(BGN_DATE, unit = \u0026quot;1 month\u0026quot;)) %\u0026gt;% group_by(BGN_DATE, EVTYPE) %\u0026gt;% summarise_at(c(\u0026quot;prop_dmg\u0026quot;, \u0026quot;crop_dmg\u0026quot;), sum) %\u0026gt;% ungroup() %\u0026gt;% gather(\u0026quot;measure\u0026quot;, \u0026quot;total_dmg\u0026quot;, 3:4)   Results Question 1 Results The goal of this plot is to show the most impactful event types over the past ten years. For this, I am using a faceted ggplot column visualization.\nquest_1_final %\u0026gt;% ggplot(aes(as.character(year(BGN_DATE)), count, fill = measure)) + geom_col() + facet_wrap(~EVTYPE, scales = \u0026quot;free_y\u0026quot;) + theme(text = element_text(family = \u0026quot;Roboto\u0026quot;), legend.position = \u0026quot;bottom\u0026quot;, axis.text.x = element_text(angle = 90, vjust = 0.5), axis.title = element_blank(), panel.background = element_blank(), strip.background = element_rect(fill = \u0026quot;#146a90\u0026quot;), strip.text = element_text(color = \u0026quot;white\u0026quot;, face = \u0026quot;bold\u0026quot;)) + scale_fill_viridis_d(\u0026quot;\u0026quot;, direction = -1)  Question 2 Results As with question one, the goal of this plot is to show the most impactful event types over the past ten years in terms of property and crop damage. For this, I am using a faceted ggplot column visualization that is modeled after the question one plot for consistency.\nquest_2_final %\u0026gt;% ggplot(aes(as.character(year(BGN_DATE)), total_dmg/1000000, fill = measure)) + geom_col() + facet_wrap(~EVTYPE, scales = \u0026quot;free_y\u0026quot;) + theme(text = element_text(family = \u0026quot;Roboto\u0026quot;), legend.position = \u0026quot;bottom\u0026quot;, axis.text.x = element_text(angle = 90, vjust = 0.5), axis.title.x = element_blank(), panel.background = element_blank(), strip.background = element_rect(fill = \u0026quot;#146a90\u0026quot;), strip.text = element_text(color = \u0026quot;white\u0026quot;, face = \u0026quot;bold\u0026quot;)) + labs(y = \u0026quot;Total Damage (millions)\u0026quot;) + scale_fill_viridis_d(\u0026quot;\u0026quot;, direction = -1, labels = c(\u0026quot;Crop Damage\u0026quot;, \u0026quot;Property Damage\u0026quot;)) + scale_y_continuous(labels = scales::dollar_format())  Overall What about the worst in terms of economic impact and health? If you look at both question one and two results you will find only one event type consistent between both.\nnew_dat %\u0026gt;% filter(EVTYPE %in% quest_1_fat$EVTYPE \u0026amp; EVTYPE %in% quest_1_inj$EVTYPE \u0026amp; EVTYPE %in% quest_2_prop$EVTYPE \u0026amp; EVTYPE %in% quest_2_crop$EVTYPE) %\u0026gt;% group_by(EVTYPE) %\u0026gt;% summarise_at(c(\u0026quot;INJURIES\u0026quot;, \u0026quot;FATALITIES\u0026quot;, \u0026quot;CROPDMG\u0026quot;, \u0026quot;PROPDMG\u0026quot;), sum) %\u0026gt;% kable(format = \u0026quot;html\u0026quot;, align = \u0026quot;lcccc\u0026quot;, col.names = c(\u0026quot;Event Type\u0026quot;, \u0026quot;Injuries\u0026quot;, \u0026quot;Fatalities\u0026quot;, \u0026quot;Crop Damage\u0026quot;, \u0026quot;Property Damage\u0026quot;), format.args = list(big.mark = \u0026quot;,\u0026quot;)) %\u0026gt;% kable_styling(full_width = TRUE)   Event Type  Injuries  Fatalities  Crop Damage  Property Damage      THUNDERSTORM WIND  1,400  130  66,663  862,257.4       ",
    "date": 1535922540,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1535922540,
    "objectID": "a4a975c6775cf24d6698befa8c0728ae",
    "permalink": "/post/2018-09-02-reproducible-research/",
    "publishdate": "2018-09-02T21:09:00Z",
    "relpermalink": "/post/2018-09-02-reproducible-research/",
    "section": "post",
    "summary": "Synopsis In this analysis I amd concerned with two primary points. Which event types have the greatest health impact and the greatest economic impact. I begin my work with data processing to create usable objects for results visualization. I finish my analysis with two plots and a final table.\n Package Load Load packages required for analysis.\nrequire(tidyverse) require(lubridate) require(kableExtra)  Data Import Leveraging read_csv from the readr packackge included with tidyverse to import the dataset.",
    "tags": [
      "R Markdown",
      "analysis",
      "reproducible"
    ],
    "title": "Health and Economic Impact of Storms and Severe Weather Events",
    "type": "post"
  },
  {
    "authors": [
      "Jason Jones"
    ],
    "categories": null,
    "content": "",
    "date": 1527825600,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1527825600,
    "objectID": "f3e51c17dad960210e18ca471df74b94",
    "permalink": "/talk/open-data/",
    "publishdate": "2018-06-01T00:00:00-04:00",
    "relpermalink": "/talk/open-data/",
    "section": "talk",
    "summary": "Talk on the past, present, and future of local government open data given at the 2018 Innovations in Planning for Better Community Housing and Health Symposium at UNCG.",
    "tags": [
      "open data",
      "data"
    ],
    "title": "Government Open Data",
    "type": "talk"
  },
  {
    "authors": null,
    "categories": [
      "R"
    ],
    "content": "  Package Import Load necessary packages and set one global option.\nlibrary(tidyverse) library(pdftools) library(tidytext) library(knitr) library(kableExtra) options(stringsAsFactors = FALSE)  Retrieve File Download the file from the City of Raleigh website, read that file in as a character vector, and delete the downloaded file from the directory.\ndownload.file(\u0026quot;https://www.raleighnc.gov/content/BudgetManagement/Documents/Budget/Archive/2018/FY2018AdoptedBudget20160612.pdf\u0026quot;, \u0026quot;FY2018AdoptedBudget.pdf\u0026quot;, mode = \u0026quot;wb\u0026quot;) txt = pdf_text(\u0026quot;FY2018AdoptedBudget.pdf\u0026quot;) unlink(\u0026quot;FY2018AdoptedBudget.pdf\u0026quot;)  Create Data Frame Create a page number character vector, create a data frame by binding the page number character vector with the extracted text, and finally “unnest” all of the page text into individual words.\npage = as.character(1:length(txt)) df = data.frame(cbind(page, txt)) budget_words = df %\u0026gt;% unnest_tokens(word, txt)  Cleaning Remove stop words and save as clean object, join sentiment lexicon with clean object, and group the object by page and sentiments before summarising.\ncleaned = budget_words %\u0026gt;% anti_join(stop_words) sentiment = cleaned %\u0026gt;% inner_join(get_sentiments(\u0026quot;nrc\u0026quot;)) sent_count = sentiment %\u0026gt;% group_by(page, sentiment) %\u0026gt;% summarise(sent_count = n()) %\u0026gt;% ungroup() %\u0026gt;% mutate(page = as.integer(page))  Visualize  Negative Word Table   Word  Word Count      APPROPRIATION  77    BONDS  50    DEBT  219    EMERGENCY  67    EXPENDITURE  123    FEE  136    INCOME  65    RISK  31    TAX  153    WASTE  122      Trust Word Table   Word  Word Count      BUDGET  400    CENTER  196    COUNCIL  173    GRANT  85    IMPROVEMENT  93    MANAGEMENT  165    ORDINANCE  88    PLANNING  77    RESOURCES  105    SYSTEM  101      ",
    "date": 1525036140,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1525036140,
    "objectID": "5c491dc7eff91501e4bdcf15639daac9",
    "permalink": "/post/2018-04-29-raleigh-sentiment/",
    "publishdate": "2018-04-29T21:09:00Z",
    "relpermalink": "/post/2018-04-29-raleigh-sentiment/",
    "section": "post",
    "summary": "Package Import Load necessary packages and set one global option.\nlibrary(tidyverse) library(pdftools) library(tidytext) library(knitr) library(kableExtra) options(stringsAsFactors = FALSE)  Retrieve File Download the file from the City of Raleigh website, read that file in as a character vector, and delete the downloaded file from the directory.\ndownload.file(\u0026quot;https://www.raleighnc.gov/content/BudgetManagement/Documents/Budget/Archive/2018/FY2018AdoptedBudget20160612.pdf\u0026quot;, \u0026quot;FY2018AdoptedBudget.pdf\u0026quot;, mode = \u0026quot;wb\u0026quot;) txt = pdf_text(\u0026quot;FY2018AdoptedBudget.pdf\u0026quot;) unlink(\u0026quot;FY2018AdoptedBudget.pdf\u0026quot;)  Create Data Frame Create a page number character vector, create a data frame by binding the page number character vector with the extracted text, and finally “unnest” all of the page text into individual words.",
    "tags": [
      "R Markdown",
      "budget",
      "sentiment"
    ],
    "title": "City of Raleigh Budget Sentiment Analysis",
    "type": "post"
  },
  {
    "authors": [
      "Jason Jones"
    ],
    "categories": null,
    "content": "",
    "date": 1515474000,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1515474000,
    "objectID": "c91f9fa5241d0f4fa5c8c444fc0484f9",
    "permalink": "/publication/i-have-to-ask-you/",
    "publishdate": "2018-01-09T00:00:00-05:00",
    "relpermalink": "/publication/i-have-to-ask-you/",
    "section": "publication",
    "summary": "Apparently ELGL co-founder Kent Wyatt moonlights as a private background investigator, diving deep into the past lives of all of his ELGL family. Sometimes I forget that I spent five years as a track and field athlete while also receiving a quality education at North Carolina State University. I mean, it isn’t really something that you whip out of your “fun facts bag” all that frequently. Discussing the intricate physics of spinning in a circle with a sixteen pound cast iron ball before releasing it in a blur of chalk dust and grunting doesn’t make for the best dinner conversation.",
    "tags": [
      "ELGL"
    ],
    "title": "I Have to Ask You",
    "type": "publication"
  },
  {
    "authors": null,
    "categories": [
      "R"
    ],
    "content": " Introduction As a different approach to this exercise, I would like to avoid traditional Microsoft Excel analysis and deliver my product in a fully reproducible R Markdown format. I will attempt to walk you through my thought process in a simple fashion, including all code chunks and formulas. If this analysis is consistent with a best practice approach, it can be made available to others for reproduction. The transparency and reproducibility of R Markdown allows for others to easily understand, critique and augment the analysis.\nThe research question posed is:\n Using the information given and the accompanying Excel file, determine how much the city would have to charge per bag to cover garbage collection and disposal costs.\n To answer this question I will evaluate The City of Raleigh’s current state against the desired state.\n Current State: customers pay a monthly fee for garbage and recycling collection regardless of how much total waste they produce Desired State: customers purchase special garbage bags from the city and only pay for the waste that they produce  I have broken this evaluation down into four steps to hopefully provide additional clarity.\nForecast Collection Breakdown Estimate Net Costs Calculate Recovery Estimate Determine PAYT Rate Estimate  Breaking down the analysis in this manner not only provides additional clarity but allows co-workers and supervisors to find any errors more quickly than searching through formulas in a spreadsheet. Fortunately, that will allow you to more easily locate the inevitable errors contained within this analysis.\n Step 1: Forecast Collection Breakdown 1.1 Calculate New Diversion Rate total.garbage.tons = 84582 total.recycling.tons = 25189 current.diversion.rate = total.recycling.tons/(total.garbage.tons + total.recycling.tons) new.diversion.rate = round(current.diversion.rate * 1.3, digits = 2) Here, I have to start with the current diversion rate and add the projected increase. To calculate the current diversion rate, I am dividing the total recycling tons by the total tons collected between garbage and recycling. Finally, I add the 30% projected increase. With the above calculation, I estimate a new diversion rate of 30%.\n 1.2 Calculate New Garbage/Recycling Split total.tons = total.garbage.tons + total.recycling.tons new.total.recycling.tons = round(total.tons * new.diversion.rate) new.total.garbage.tons = round(total.tons - new.total.recycling.tons) I can now use my new diversion rate estimate to calculate an updated split between garbage and recycling. To do this, I multiply the old total by the diversion rate to arrive at a total for recycling. From there, I can subtract recycling from the total to arrive a projection for tons of garbage. I estimate that the new total tons of garbage will be 76,840 and the new total tons of recycling will be 32,931.\n  Step 2: Estimate Net Costs 2.1 Calculate Total Cost to Department tipping.fees = 3686202 garbage.cost.per.ton = 273 recycling.cost.per.ton = 37 recycling.profit.per.ton = 30 recycling.fee = 2.6 households.served = 120500 recycling.fee.revenue = (recycling.fee * households.served) * 12 recycling.profit = recycling.profit.per.ton * new.total.recycling.tons garbage.collection.expense = garbage.cost.per.ton * new.total.garbage.tons + tipping.fees recycling.collection.expense = (recycling.cost.per.ton * new.total.recycling.tons) - (recycling.profit + recycling.fee.revenue) total.cost = garbage.collection.expense + recycling.collection.expense The above calculation renders two very important figures. I estimate a new garbage collection and disposal expense of $24,663,522. Combined with the new net recycling collection expense, this results in a total collection and disposal net cost estimate of $21,134,439.\n  Step 3: Calculate Recovery Estimate 3.1 Calculate Current Fee Revenue garbage.fee = 12.2 total.current.fee.revenue = ((garbage.fee + recycling.fee) * households.served) * 12 Using the information provided in the word document, I use the above formula to calculate total current fee revenue. The above formula yields a total current fee revenue of $21,400,800\n 3.2 Calculate Average Total Expense average.total.expense \u0026lt;- division.expense %\u0026gt;% group_by(`Fiscal Year`) %\u0026gt;% summarise(total = sum(Expense)) %\u0026gt;% ungroup() %\u0026gt;% summarise(average = mean(total)) average.total.expense = round(average.total.expense$average) Here, I use the data from the spreadsheet that I have pulled in to calculate an average total division expense. To do this I group the data by fiscal year, calculate a sum for each fiscal year and then calculate an average. My average total expense estimate comes out to $30,932,157\n 3.3 Calculate Current Recovery Rate old.recycling.profit = recycling.profit.per.ton * total.recycling.tons current.recovery.rate = + (total.current.fee.revenue + old.recycling.profit) / average.total.expense  Now I am able to use my prior two calculations to estimate the current recovery rate. You may also notice an additional step above to create an estimate of current recycling profit before any changes occur. To calculate the recovery rate, I divide the total current fee revenue and the recycling revenue that I just calculated by the average total expense that I calculated in the last step. This formula yields a current recovery rate of 71.63%.\n 3.4 Project New Total Expense admin.yardwaste.average.total = division.expense %\u0026gt;% filter(Division != \u0026quot;Recycling\u0026quot;) %\u0026gt;% filter(Division != \u0026quot;Residential Collection\u0026quot;) %\u0026gt;% group_by(`Fiscal Year`) %\u0026gt;% summarise(total = sum(Expense)) %\u0026gt;% ungroup() %\u0026gt;% summarise(average = mean(total)) new.total.expense.projection = round(admin.yardwaste.average.total$average) + garbage.collection.expense + recycling.collection.expense To project the new total expense, I am pulling data from several prior steps. First, I use the spreadsheet data that I pulled in to isolate costs associated with division administration and yardwaste collection. I perform the same function on this data, once isolated, as I did in 3.2. Once this is calculated I add this estimate to my newly calculated garbage and recycling expense for a new total expense projection of $30,972,068.\n 3.5 Calculate Total Expense To Recover new.expense.to.recover = round(new.total.expense.projection * current.recovery.rate) Finally, I am able to use the new total expense estimate and recovery rate to come up with an updated estimate of total expenses to recover. The above formula yields an estimate of $22,185,058.\n  Step 4: Determine PAYT Rate Estimate 4.1 Calculate Bags Per Year bag.capacity.pounds = 20 total.pounds = new.total.garbage.tons * 2000 bags.per.year = total.pounds/bag.capacity.pounds The first step in determining the PAYT rate estimate is calculating how many garbage bags we expect to sell for the year. To do this, I need to convert my new tons of garbage estimate from 1.2 to pounds of garbage by multiplying it by 2,000 (pounds per ton). After that is done, I can estimate how many garbage bags we will sell by dividing the total garbage pounds by the estimated bag capacity. This yields an estimate of 7,684,000 bags.\n 4.2 Calculate Cost Per Bag (w/o Recovery) cost.per.bag = round(garbage.collection.expense/bags.per.year, digits = 2) Finally, I am able to deliver my first estimate for cost per bag. This estimate assumes that we only want to “cover garbage collection and disposal costs” as stated in the exercise prompt. I divide my updated estimate of total garbage collection and disposal expense by my estimate of bags for the year to come up with a per bag estimate of $3.21.\nYou will see below, that this option achieves the target recovery rate of 80% outlined in the budget document.\n 4.3 Calculate Cost Per Bag (w/ Recovery Consideration) recovery.cost.per.bag = round(new.expense.to.recover/bags.per.year, digits = 2) target.recovery.rate = 0.8 target.expense.to.recover = round(new.total.expense.projection * target.recovery.rate) target.recovery.cost.per.bag = round(target.expense.to.recover/bags.per.year, digits = 2) For a possibly more realistic projection, I am incorporating my updated estimate of total expenses to recover. Since this was noted in the budget document, I am assuming that this will be the primary calculation considered. I am also providing a per bag estimate for the 80% cost recovery target mentioned in the budget document.\nMy per bag estimate, with a current cost recovery estimate of 71.63%, comes out to $2.89 per bag.\nMy per bag estimate, with a target cost recovery estimate of 80%, comes out to $3.22 per bag.\nPlease note that in both estimates I am subtracting my estimated recycling fee revenue and recycling profit.\n  Additional Consideration Subsidizing Yardwaste Collection Another consideration that may be applicable is the obvious subsidy to yardwaste collection. Administrative costs are a given, but yardwaste appears to be the only direct service provided with no costs recovered. Below, I will take a quick look at the difference in pricing if a fee to cover the cost of yardwaste collection is also considered.\n Isolate Average Yardwaste Collection Expense isolate.yardwaste.cost = division.expense %\u0026gt;% filter(Division == \u0026quot;Yardwaste Center\u0026quot;) %\u0026gt;% group_by(`Fiscal Year`) %\u0026gt;% summarise(total = sum(Expense)) %\u0026gt;% ungroup() %\u0026gt;% summarise(average = mean(total)) isolate.yardwaste.cost = isolate.yardwaste.cost$average  Calculate Cost Per Bag Without Yardwaste Subsidy recovery.cost.per.bag.no.yw = round((new.expense.to.recover - isolate.yardwaste.cost)/bags.per.year, digits = 2) target.expense.to.recover.no.yw = round((new.total.expense.projection - isolate.yardwaste.cost) * target.recovery.rate) target.recovery.cost.per.bag.no.yw = round(target.expense.to.recover.no.yw/bags.per.year, digits = 2) With no yardwaste collection fees included, my per bag estimate, with a current cost recovery estimate of 71.63%, comes out to $2.63 per bag.\nAdditionally, my per bag estimate, with a target cost recovery estimate of 80%, comes out to $3.02 per bag.\n  Visualize Collection Differential df = data.frame(Type = c(\u0026quot;Garbage\u0026quot;, \u0026quot;Recycling\u0026quot;), Current = c(total.garbage.tons, total.recycling.tons), PAYT = c(new.total.garbage.tons, new.total.recycling.tons)) df = df %\u0026gt;% gather(\u0026quot;Estimates\u0026quot;, \u0026quot;Tons\u0026quot;, 2:3) df %\u0026gt;% ggplot(aes(Type, Tons, fill = Type)) + geom_col(position = \u0026quot;dodge\u0026quot;) + facet_wrap(~Estimates) + ggtitle(\u0026quot;Tonnage Comparison: Current vs PAYT\u0026quot;) + theme_minimal() + scale_y_continuous(labels = scales::comma)  Supplement: Attached Data   Division Expense Fiscal Year X4 X5    Administration 3344632 2012 NA NA  Administration 9926363 2013 NA NA  Administration 8703620 2014 NA NA  Administration 9603260 2015 NA NA  Recycling 4430951 2012 NA NA  Recycling 4467306 2013 NA NA  Recycling 5085779 2014 NA NA  Recycling 5234118 2015 NA NA  Residential Collection 15344575 2012 NA NA  Residential Collection 15437538 2013 NA NA  Residential Collection 16316297 2014 NA NA  Residential Collection 18061548 2015 NA NA  Yardwaste Center 1435974 2012 NA NA  Yardwaste Center 1466780 2013 NA NA  Yardwaste Center 2470295 2014 NA NA  Yardwaste Center 2399591 2015 NA NA     ",
    "date": 1511212140,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1511212140,
    "objectID": "1819a61bf702d8f1cd45c56786591121",
    "permalink": "/post/2017-11-20-payt-estimate/",
    "publishdate": "2017-11-20T21:09:00Z",
    "relpermalink": "/post/2017-11-20-payt-estimate/",
    "section": "post",
    "summary": "Introduction As a different approach to this exercise, I would like to avoid traditional Microsoft Excel analysis and deliver my product in a fully reproducible R Markdown format. I will attempt to walk you through my thought process in a simple fashion, including all code chunks and formulas. If this analysis is consistent with a best practice approach, it can be made available to others for reproduction. The transparency and reproducibility of R Markdown allows for others to easily understand, critique and augment the analysis.",
    "tags": [
      "R Markdown",
      "garbage",
      "budget",
      "analysis"
    ],
    "title": "Estimating Pay-As-You-Throw (PAYT) Cost Recovery Rate",
    "type": "post"
  },
  {
    "authors": null,
    "categories": null,
    "content": "",
    "date": 1461729600,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1461729600,
    "objectID": "d1311ddf745551c9e117aa4bb7e28516",
    "permalink": "/project/external-project/",
    "publishdate": "2016-04-27T00:00:00-04:00",
    "relpermalink": "/project/external-project/",
    "section": "project",
    "summary": "An example of linking directly to an external project website using `external_link`.",
    "tags": [
      "Demo"
    ],
    "title": "External Project",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n",
    "date": 1461729600,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1461729600,
    "objectID": "8f66d660a9a2edc2d08e68cc30f701f7",
    "permalink": "/project/internal-project/",
    "publishdate": "2016-04-27T00:00:00-04:00",
    "relpermalink": "/project/internal-project/",
    "section": "project",
    "summary": "An example of using the in-built project page.",
    "tags": [
      "Deep Learning"
    ],
    "title": "Internal Project",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": " Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n",
    "date": -62135596800,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": -62135596800,
    "objectID": "c2915ec5da95791851caafdcba9664af",
    "permalink": "/slides/example-slides/",
    "publishdate": "0001-01-01T00:00:00Z",
    "relpermalink": "/slides/example-slides/",
    "section": "slides",
    "summary": "Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$",
    "tags": null,
    "title": "Slides",
    "type": "slides"
  }
]