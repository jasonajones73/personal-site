<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>budget on JASON JONES</title>
    <link>/tags/budget/</link>
    <description>Recent content in budget on JASON JONES</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 29 Apr 2018 21:09:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/budget/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>City of Raleigh Budget Sentiment Analysis</title>
      <link>/post/2018-04-29-raleigh-sentiment/</link>
      <pubDate>Sun, 29 Apr 2018 21:09:00 +0000</pubDate>
      
      <guid>/post/2018-04-29-raleigh-sentiment/</guid>
      <description>Package Import Load necessary packages and set one global option.
library(tidyverse) library(pdftools) library(tidytext) library(knitr) library(kableExtra) options(stringsAsFactors = FALSE)  Retrieve File Download the file from the City of Raleigh website, read that file in as a character vector, and delete the downloaded file from the directory.
download.file(&amp;quot;https://www.raleighnc.gov/content/BudgetManagement/Documents/Budget/Archive/2018/FY2018AdoptedBudget20160612.pdf&amp;quot;, &amp;quot;FY2018AdoptedBudget.pdf&amp;quot;, mode = &amp;quot;wb&amp;quot;) txt = pdf_text(&amp;quot;FY2018AdoptedBudget.pdf&amp;quot;) unlink(&amp;quot;FY2018AdoptedBudget.pdf&amp;quot;)  Create Data Frame Create a page number character vector, create a data frame by binding the page number character vector with the extracted text, and finally “unnest” all of the page text into individual words.</description>
    </item>
    
  </channel>
</rss>